<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic-preface">
    <title>Preface</title>
    <body>
        <section>
            <title>About the DITA to oManual Converter</title>
            <p>The org.omanual.dita2omanual plugin enables the conversion of applicable DITA task content into the IEEE-approved oManual XML format for import into iFixit.com for publication.</p>
            <p>Best suited for "repair manual" type content with rich media <xref href="http://www.ifixit.com/" scope="external">http://www.ifixit.com/</xref>.</p>
        </section>
        <section>
            <title>DITA to oManual plug-in features</title>
            <p>This plug-in has following features.</p>
            <dl>
                <dlentry>
                    <dt>stylesheets</dt>
                    <dd>This plug-in contains DITA to oManual stylesheets written to XSLT 2.0 conventions.</dd>
                </dlentry>
                <dlentry>
                    <dt>Supports DITA tasks</dt>
                    <dd>Converts maps to category document; tasks to guide entries and main guide documents.</dd>
                </dlentry>
                <dlentry>
                    <dt>feature</dt>
                    <dd>Description</dd>
                </dlentry>
            </dl>
        </section>
        <section>
            <title>Limitations</title>
            <p>Currently converts only DITA tasks (since procedures are the primary feature of oManual).</p>
            <p>Content conversion aims to cover oManual's allowed HTML subset. DITA content that does not align with this subset is currently mapped into a div that identifies it as unsupported content (which mainly means just that a better idea is needed on how to port the content over more gracefully!).</p>
            <p>An Ant build task has been provided, and it works in principle for the tasks themselves--each is converted into its respective guide. However, the map itself does not generate the procedure shell. It's mainly a matter of Ant setup and testing, and is open for any contributor to help complete the integration. Once enabled, builds may be set up that apply conditional processing as part of the transform. As currently effected from the command line, you would have to have done that pre-processing in a separate step using the eclipsecontent transtype as suggested elsewhere.</p>
        </section>
    </body>
</topic>
